安装第三方库
如：jQuery
1.下载并安装到本地库 npm install jquery --save
2.引入到项目中
  修改angular-cli.json中的styles，scripts
   "styles": [
          "styles.css",
          "../node_modules/bootstrap/dist/css/bootstrap.css"
        ],
     "scripts": [
              "../node_modules/jquery/dist/jquery.js",
              "../node_modules/bootstrap/dist/js/bootstrap.js"
            ],
3.类型描述文件
npm install @types/jquery --save-dev
npm install @types/bootstrap --save-dev
这两个文件是让 typeScript认识jquery 和 bootstrap
-------------------------------------------
1.创建组件
ng g component 组件名
------------------------
Angular Route导航

-----------------------------------------

依赖注入： Dependency Injection 简称 DI
控制反转：Inversion Of Control 简称：IOC

控制反转 描述 目的：将依赖控制权转移到外部
依赖注入 描述 手段：如何实现控制反转

通过依赖注入来是实现控制反转

通过providers属性指定注入
通过constructor构造函数使用provider的service

注入器：负责注入该组件依赖的类，自动通过constructor构造器实现
提供器：providers(组件或模块的属性)
providers:[ProductService]
providers:[{provide:ProductService,useClass:ProductService}]

生成服务：ng g service shard/product

providers：声明在组件时候，只对当前组件和子组件可见；声明在模块时候，对模块中所有组件都可用
@Injectable()：决定构造函数是否能注入其他的服务

工厂函数作为提供器：
-----------------------------------------------------
数据绑定，响应式编程，管道

1.数据绑定
    a.使用一个插值表达式将一个表达式的值显示在模板上
    b.使用方括号将HTML标签的一个属性绑定到一个表达式上
    c.使用小括号将组件控制器的一个方法绑定为模板上一个事件处理器
  HTML属性与DOM属性
  1.HTML属性指定了初始值，DOM属性的值表示当前值。
  2.DOM属性值可以改变，HTML属性值的值不能改变
  3.模版的绑定是通过DOM属性和事件工作的，而不是HTML属性。
2.响应式
3.管道
--------------------------------------
组件通信
1.组件的输入与输出属性
2.使用中间人模式传递数据
3.组件生命周期以及angular的变化发现机制

组件生命周期：
ngOnChange：@Input()修饰的输入属性
组件初始化和父组件改变其值的时候触发


-------------------------------
表单
Angular 表单API

1.模板式表单
 FormModule
 指令定义数据模型：
    a.NgForm：(FormGroup)代表整个表单，自动添加到form标签上；；
    b.NgModel：(FormControl)
    c.NgModelGroup:(FormGroup)

2.响应式表单
 ReactiveFormModule
1.FormControl FormGroup FormArray
2.























